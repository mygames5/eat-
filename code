def read_recipes_from_file(filename):
    cook_book = {}
    with open(filename, 'r', encoding='utf-8') as file:
        lines = file.readlines()
        i = 0
        while i < len(lines):
            dish_name = lines[i].strip()
            ingredient_count = int(lines[i + 1].strip())
            i += 2
            ingredients = []
            for _ in range(ingredient_count):
                ingredient_info = lines[i].strip().split('|')
                ingredient = {
                    'ingredient_name': ingredient_info[0].strip(),
                    'quantity': int(ingredient_info[1].strip()),
                    'measure': ingredient_info[2].strip()
                }
                ingredients.append(ingredient)
                i += 1
            cook_book[dish_name] = ingredients
    return cook_book


def get_shop_list_by_dishes(dishes, person_count, cook_book):
    shop_list = {}
    for dish in dishes:
        for ingredient in cook_book[dish]:
            if ingredient['ingredient_name'] not in shop_list:
                shop_list[ingredient['ingredient_name']] = {
                    'measure': ingredient['measure'],
                    'quantity': ingredient['quantity'] * person_count
                }
            else:
                shop_list[ingredient['ingredient_name']]['quantity'] += ingredient['quantity'] * person_count
    return shop_list


def write_result_to_file(result, filename):
    with open(filename, 'w', encoding='utf-8') as file:
        for key, value in result.items():
            file.write(f"{key}\n{value}\n")


def merge_files(file_list, output_filename):
    with open(output_filename, 'w', encoding='utf-8') as output_file:
        for filename in sorted(file_list, key=lambda x: sum(1 for line in open(x, 'r', encoding='utf-8'))):
            with open(filename, 'r', encoding='utf-8') as file:
                lines = file.readlines()
                output_file.write(f"{filename}\n{len(lines)}\n")
                output_file.writelines(lines)


# №1
cook_book = read_recipes_from_file('recipes.txt')
print(cook_book)

# №2
dishes = ['Запеченный картофель', 'Омлет']
person_count = 2
shop_list = get_shop_list_by_dishes(dishes, person_count, cook_book)
print(shop_list)

# №3
file_list = ['1.txt', '2.txt']
output_filename = 'merged_files.txt'
merge_files(file_list, output_filename)
